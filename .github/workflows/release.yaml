name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest
      - name: Set build time (UTC)
        id: bt
        run: echo "time=$(date -u +%FT%TZ)" >> $GITHUB_OUTPUT
        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./eventlink-webapp
          file: ./eventlink-webapp/docker/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APIKEY_PEPPER=${{ secrets.APIKEY_PEPPER }}
            API_BASE_EVENTLINK=${{ secrets.API_BASE_EVENTLINK }}
            API_KEY_EVENTLINK=${{ secrets.API_KEY_EVENTLINK }}
            API_BASE_UNITY=${{ secrets.API_BASE_UNITY }}
            API_KEY_UNITY=${{ secrets.API_KEY_UNITY }}
            COMMIT_SHA=${{ github.sha }}
            BUILD_TIME=${{ steps.bt.outputs.time }}

      - name: Deploy to k3s Cluster
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          mkdir -p $HOME/.kube  # Ensure the .kube directory exists
          echo "$KUBE_CONFIG_DATA" | base64 --decode > $HOME/.kube/config


          kubectl apply -f k8s/prod --validate=false
          kubectl rollout restart deployment/unity-tool-frontend -n unity-tool-prod
